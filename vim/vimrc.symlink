syntax on

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

set backspace=2         " backspace in insert mode works like normal editor
set autoindent          " auto indenting
set number              " line numbers
syntax enable
set ignorecase
set smartcase
set hlsearch
set tabstop=2 shiftwidth=2 expandtab

let mapleader = ','     " Set leader as ,

" Remove trailing whitespace with <Leader>xxx
nnoremap <Leader>xxx :%s/\s\+$//e<CR>

" Switch cursor shape according to mode
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Show whitespace only when in Escape mode
highlight default link EndOfLineSpace ErrorMsg
match EndOfLineSpace / \+$/
autocmd InsertEnter * hi link EndOfLineSpace Normal
autocmd InsertLeave * hi link EndOfLineSpace ErrorMsg

:set mouse=a " Use the mouse sometimes

set clipboard=unnamed

" Copy and paste stuff around
" Ctrl - C Copies to Clipboard!!
" ,, also copies to clipboard! Whew!

nmap <Leader><v> :set paste<CR>:r !pbpaste<CR>:set nopaste<CR>
imap <Leader><v> <Esc>:set paste<CR>:r !pbpaste<CR>:set nopaste<CR>
nmap <Leader><Leader> :.w !pbcopy<CR><CR>
vmap <Leader><Leader> :w !pbcopy<CR><CR>
nmap <C-c> :.w !pbcopy<CR><CR>
vmap <C-c> :w !pbcopy<CR><CR>

autocmd FileType c,cpp,java,scala let b:comment_leader = '//'
autocmd FileType sh,ruby,python   let b:comment_leader = '#'
autocmd FileType conf,fstab       let b:comment_leader = '#'
autocmd FileType vim              let b:comment_leader = '" '

" Comment and uncomment shortcuts "
noremap <silent> ,cc :<C-B>silent <C-E>s/^/<C-R>=escape(b:comment_leader,'\/')<CR>/<CR>:nohlsearch<CR>
noremap <silent> ,cu :<C-B>silent <C-E>s/^\V<C-R>=escape(b:comment_leader,'\/')<CR>//e<CR>:nohlsearch<CR>

set ruler " I like seeing the column number

set paste
